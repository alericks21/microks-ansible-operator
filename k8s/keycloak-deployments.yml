kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{name}}-keycloak"
  namespace: '{{ meta.namespace }}'
  labels:
    app: "{{name}}"
    container: keycloak
    group: microcks
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector: 
    matchLabels:  
      app: "{{name}}"
      deploymentconfig: keycloak
      container: keycloak
      group: microcks
  template:
    metadata:
      labels:
        app: "{{name}}"
        deploymentconfig: keycloak
        container: keycloak
        group: microcks
    spec:
      containers:
      - name: keycloak-server
        image: jboss/keycloak-openshift:3.4.0.Final
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: jolokia
          containerPort: 8778
          protocol: TCP
        args:
        - start-keycloak.sh
        - "-b $(INTERNAL_POD_IP)"
        - "-Djgroups.bind_addr=global"
        - "-Djboss.node.name=$(INTERNAL_POD_IP)"
        - "-Dkeycloak.import=/opt/jboss/keycloak/standalone/configuration/realm/microcks-realm.json"
        env:
        - name: INTERNAL_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: "{{name}}-keycloak-admin"
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: "{{name}}-keycloak-admin"
        - name: OPERATING_MODE
          value: clustered
        - name: DB_VENDOR
          value: POSTGRES
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: postgresUsername
              name: "{{name}}-keycloak-admin"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresPassword
              name: "{{name}}-keycloak-admin"
        - name: POSTGRES_DATABASE
          value: root
        - name: POSTGRES_PORT_5432_TCP_ADDR
          value: "{{name}}-keycloak-postgresql"
        - name: OPENSHIFT_KUBE_PING_LABELS
          value: deploymentconfig=keycloak
        - name: OPENSHIFT_KUBE_PING_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: "{{name}}-keycloak-config"
          mountPath: "/opt/jboss/keycloak/standalone/configuration/realm"
        securityContext:
          privileged: false
      volumes:
      - name: "{{name}}-keycloak-config"
        configMap:
          name: "{{name}}-keycloak-config"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{name}}-keycloak-postgresql"
  namespace: '{{ meta.namespace }}'
  labels:
    app: "{{name}}"
    container: keycloak-postgresql
    group: microcks
spec:
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{name}}"
        deploymentconfig: keycloak-postgresql
        container: keycloak-postgresql
        group: microcks
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: keycloak-postgresql
        image: centos/postgresql-95-centos7:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 5
          exec:
            command:
            - "/bin/sh"
            - "-i"
            - "-c"
            - psql 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE}
              -c 'SELECT 1'
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: postgresUsername
              name: "{{name}}-keycloak-admin"
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresPassword
              name: "{{name}}-keycloak-admin"
        - name: POSTGRESQL_DATABASE
          value: root
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: '100'
        - name: POSTGRESQL_SHARED_BUFFERS
          value: 12MB
        volumeMounts:
          - name: "{{name}}-keycloak-postgresql-data"
            mountPath: "/var/lib/pgsql/data"
      volumes:
      - name: "{{name}}-keycloak-postgresql-data"
        {{- if .Values.persistence.enable }}
        persistentVolumeClaim:
          claimName: "{{name}}-keycloak-postgresql"
        {{- else }}
        emptyDir:
          medium: ''
        {{- end }}